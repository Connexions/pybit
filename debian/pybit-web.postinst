#!/usr/bin/perl
# postinst script for pybit-client
#
# see: dh_installdeb(1)

use strict;
use warnings;
use JSON;
use vars qw/ $command $ret $dbuser $dbpass $cfgfile %cfg $ret
 $basepath $dbname $dbserver $dbport $dbtype $dbexport $dh_commands
 @json_list $json_text $fh $json_hash %dbhash $json /;

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

$cfgfile   = '/etc/pybit/web/web.conf';
$dbexport  = '/etc/pybit/debian-db.pl'; # contains the temp db data

if ($ARGV[0] eq 'configure' or $ARGV[0] eq 'reconfigure') {
	# extract the db data out of dbconfig-common
	$ret = system("sh /usr/share/pybit-web/pybit-web-conf.sh configure") >> 8;
	if ($ret == 0 and -f $dbexport) {
		require $dbexport;
	}
	foreach my $key (keys %cfg) {
		my $val = $cfg{$key};
		chomp($val);
		$val =~ s/"//g;
		$val =~ s/'//g;
		$val =~ s/,//g;
		$cfg{$key} = $val;
	}
	if (-r "$cfgfile") {
		open(CONF, "$cfgfile") or die;
	} else {
		open(CONF, "/usr/share/pybit-web/web.conf") or die;
	}
	@json_list = <CONF>;
	close (CONF);
	$json = new JSON;
	$json = $json->utf8(1);
	$json = $json->pretty(1);
	$json = $json->canonical(1);
	$json_text = join(' ', @json_list);
	$json_hash = $json->decode_json($json_text);
	$$json_hash{'db'}{'hostname'} = $dbserver if (defined $dbserver);
	$$json_hash{'db'}{'databasename'} = $dbname if (defined $dbname);
	$$json_hash{'db'}{'port'} = $dbport if (defined $dbport);
	$$json_hash{'db'}{'user'} = $dbuser if (defined $dbuser);
	$$json_hash{'db'}{'password'} = $dbpass if (defined $dbpass);
	$$json_hash{'debconf'} = JSON::true;
	open (CONF, ">$cfgfile") or die;
	print CONF $json->encode_json ($json_hash);
	close (CONF);
	unlink $dbexport;
}

$dh_commands="set -- @ARGV\\n" . << 'EOF';
set -e

# source debconf stuff
. /usr/share/debconf/confmodule
# source dbconfig-common stuff
. /usr/share/dbconfig-common/dpkg/postinst.pgsql
dbc_go pybit-web $@

#DEBHELPER#
EOF

$ret = system ($dh_commands) >> 8;
if ($ret) {
	die "Shell scripts exited $ret: $!\n";
}
exit 0
