#!/usr/bin/perl -w

# avoid using the JSON module here
# or get approval for a Pre-Depends in Debian.
# debconf config scripts may run before dependencies are fully configured
# in order to collect all debconf data in one run for later use by
# all the postinsts scripts for those packages.

# sadly, this means that pybit-web cannot currently read the values
# from the config file if changed manually.

use Debconf::Client::ConfModule qw(:all);

version("2.0");
capb("backup");

# basic structure borrowed from /var/lib/dpkg/info/dwww.config

my $cfgfile  = '/etc/pybit/web/web.conf';
my %cfg=();

my $state = 1;
while ($state > 0 && $state < 3) {
	if ($state == 1) {
		beginblock();
		# check for non-interactive frontends
		@ret = input('high', 'pybit-web/rabbitmqhost');
		if ($ret[0] == 30) {
			# create some arbitrary defaults
			my $host = `hostname -f`;
			chomp ($host);
			last;
		}
		endblock();
		@ret = go();
		# error handling
		my $host = scalar get('pybit-web/rabbitmqhost');
		if (($ret[0] == 0) and (not defined $host or $host =~ m/^\s*$/)) {
			fset('pybit-web/rabbitmqhost', 'seen', 'false');
			fset('pybit-web/missinghost', 'seen', 'false');
			beginblock();
			input('high', 'pybit-web/missinghost');
			endblock();
			@ret = go();
			chomp ($host) if (defined $host);
			$host = scalar get('pybit-web/rabbitmqhost');
			$host = "" if not defined ($host);
		}
		set('pybit-web/rabbitmqhost', $host);
	}
	elsif ($state == 2) {
		beginblock();
		input('medium', 'pybit-web/hostname');
		input('medium', 'pybit-web/port');
		endblock();
		@ret = go();
	}
	if ( ($ret[0] == 30) ) {
		$state--; 	# go back
	}
	else {
		$state++; 	# go forward
	}
}
